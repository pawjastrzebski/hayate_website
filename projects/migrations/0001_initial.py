# Generated by Django 2.1.7 on 2019-03-06 09:08

import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion
import projects.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('work', models.PositiveSmallIntegerField(choices=[(0, 'Author'), (1, 'Artist'), (2, 'Assistant')])),
            ],
            options={
                'db_table': 'authors',
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('filename', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.TextField()),
                ('number', models.CharField(blank=True, max_length=10, null=True)),
                ('prefix_title', models.CharField(blank=True, max_length=20, null=True)),
                ('order_number', models.SmallIntegerField()),
                ('active', models.IntegerField()),
                ('state', models.IntegerField()),
                ('date', models.IntegerField()),
            ],
            options={
                'db_table': 'chapters',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('genre_type', models.PositiveIntegerField(blank=True, choices=[(0, 'gatunek'), (1, 'grupa demograficzna'), (2, 'czasy'), (3, 'miejsce'), (4, 'inne')], null=True)),
                ('name', models.CharField(blank=True, max_length=40, null=True)),
                ('slug', autoslug.fields.AutoSlugField(default=None, editable=False, null=True, populate_from='name', unique=True)),
            ],
            options={
                'db_table': 'genres',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('job_name', models.CharField(max_length=50)),
                ('hide', models.IntegerField()),
            ],
            options={
                'db_table': 'jobs',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', autoslug.fields.AutoSlugField(default=None, editable=False, null=True, populate_from='name', unique=True)),
                ('name_kanji', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('birthplace', models.CharField(blank=True, max_length=50, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('blood_type', models.CharField(blank=True, choices=[('0', '0'), ('A', 'A'), ('B', 'B'), ('AB', 'AB')], max_length=2, null=True)),
                ('description', models.TextField()),
                ('twitter', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'people',
            },
        ),
        migrations.CreateModel(
            name='ProjectGenre',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Genre')),
            ],
            options={
                'db_table': 'project_genre',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Job')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.User')),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', autoslug.fields.AutoSlugField(default=None, editable=False, null=True, populate_from='name', unique=True)),
                ('name_pl', models.CharField(blank=True, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, max_length=255, null=True)),
                ('name_kanji', models.CharField(blank=True, max_length=255, null=True)),
                ('alternative_names', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.IntegerField()),
                ('is_hentai', models.IntegerField()),
                ('description', models.TextField()),
                ('total_volumes', models.SmallIntegerField()),
                ('state_japan', models.IntegerField()),
            ],
            options={
                'db_table': 'titles',
            },
        ),
        migrations.CreateModel(
            name='Volume',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order_number', models.IntegerField()),
                ('number', models.IntegerField()),
                ('specific_name', models.CharField(blank=True, max_length=30, null=True)),
                ('cover', models.ImageField(null=True, upload_to=projects.models.Volume.get_upload_path)),
            ],
            options={
                'db_table': 'volumes',
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Chapter')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Job')),
                ('prev_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Work')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.User')),
            ],
            options={
                'db_table': 'works',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('title', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='projects.Title')),
                ('name', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(default=None, editable=False, null=True, populate_from='name', unique=True)),
                ('chapter_prefix', models.CharField(max_length=25)),
                ('state', models.IntegerField(choices=[(0, 'ukryty'), (1, 'aktywny'), (2, 'zako≈Ñczony'), (3, 'porzuczony'), (4, 'zlicencjonowany')])),
                ('text_state', models.TextField(blank=True, null=True)),
                ('banner', models.ImageField(null=True, upload_to=projects.models.Project.get_upload_path)),
            ],
            options={
                'db_table': 'projects',
            },
        ),
        migrations.AddField(
            model_name='title',
            name='authors',
            field=models.ManyToManyField(through='projects.Author', to='projects.Person'),
        ),
        migrations.AddField(
            model_name='title',
            name='genres',
            field=models.ManyToManyField(through='projects.ProjectGenre', to='projects.Genre'),
        ),
        migrations.AddField(
            model_name='projectgenre',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Title'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='volume',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Volume'),
        ),
        migrations.AddField(
            model_name='author',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Person'),
        ),
        migrations.AddField(
            model_name='author',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Title'),
        ),
        migrations.AlterUniqueTogether(
            name='work',
            unique_together={('user', 'chapter', 'job')},
        ),
        migrations.AddField(
            model_name='volume',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project'),
        ),
        migrations.AddField(
            model_name='role',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project'),
        ),
        migrations.AlterUniqueTogether(
            name='projectgenre',
            unique_together={('genre', 'project')},
        ),
        migrations.AddField(
            model_name='chapter',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project'),
        ),
    ]
